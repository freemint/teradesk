DOCUMENTATION OF TERADESK

1. Introduction

Teradesk is written in C using the Pure C compiler. With some 
changes also another C compiler can be used. Besides the standard 
C, GEMDOS and GEM libraries also a few of my own libraries are 
needed te compile Teradesk. These libraries are:

- Xdialog library, a GEM library for dialogs and windows. Teradesk
  is built around the window part of this library.
- A directory containing some Pure C specific bindings
- a library with some miscellaneous functions

Teradesk itself consists of the following source files:

applik.c	- This module handles starting applications and manages
			  the database with installed applications.
batch.c		- This module executes the 'desktop.bat' file.
copy.c		- This module handles copying, moving and deleting files
			  and folders.
dir.c		- This module handles the directory windows.
edit.c		- This module contains some functions for starting and
			  selecting the default editor.
environm.c	- Some functions for managing the environment variables.
error.c		- This module contains some error handlers.
events.c	- Some functions to simplify handling GEM events.
file.c		- Some miscellaneous functions for handling files and 
			  filenames.
filetype.c	- Functions for handling the database with filetypes used
			  by the 'Set file mask' command.
font.c		- Dialog box for selecting fonts and a few other 
			  functions for changing the font and fontsize.
icon.c		- Module for handling the desktop background.
icontype.c	- Module for managing the database with icons.
main.c		- Main program.
malloc.c	- Own malloc, realloc and free functions. This module 
			  allocates blocks which are exactly 8KB. The Pure C 
			  malloc functions allocate blocks which are slightly 
			  larger than 8KB, which is very inefficient when using 
			  MiNT with memory protection. (In this case MiNT
			  allocates blocks which are a multiple of 8KB)
open.c		- This module handles opening items in a directory window 
			  or on the desktop background
prgtype.c	- Manages the database with program types.
printer.c	- Handles printing files.
resource.c	- Handles loading the resourcefile, the initiation of the 
			  resource and some related variables and pointers.
screen.c	- Some miscellaneous functions for drawing on the screen,
			  saving and restoring the color palette etc.
showinfo.c	- Module which handles the 'Show Info' command.
slider.c	- Simple handler for a slider in a dialogbox. It supports
			  only one slider per dialogbox.
sprintf.c	- Simple replacement of the sprintf function in the
			  standard C library. This function saves a few KB's.
startprg.c	- Handles starting a program. Also catches shel_write 
			  calls by started programs and starts the requested 
			  program after the current program has finished.
strdup.c	- Not needed, for test purposes.
viewer.c	- Handles the viewer windows.
window.c	- Some miscellaneous functions for handling windows.
xfilesys.c	- Replacement functions for handling files etc. These 
			  functions are used to make it easier to make a common 
			  GEMDOS version and a MiNT version of Teradesk. It 
			  also contains a fopen/fread/fwrite/fclose repalcement, 
			  which supports writing to a block of memory instead of 
			  a file. This is used when starting a program. The 
			  current settings, positions of windows etc. are saved 
			  in a block of memory and restored from this block of 
			  memory, after the started program has finished.

Alsmost every module has its own include file with the same name as 
the module (only extension is .h). Besides these include files there 
are several general include files:

desk.h		- Some declarations of datastructures and functions,
			  which are not defined in the other include files.
desktop.h	- declaration of constants from the 
			  resource file.

Every filename in Teradesk is malloced. This makes it possible to
support very long filenames. A filename itself is limited to 255 
characters. A path can be infinit.

It is possible to make a special MiNT version, which supports long 
filenames and several other features of MiNT. You can make this 
version by defining the macro '_MINT_'. The MiNT version is not
finished. Especially copying and moving files and starting programs 
do not work as it should.

november 2002: Finished by me,
also made a single binary for TOS, MiNT & MagiC

Henk Robbers 
