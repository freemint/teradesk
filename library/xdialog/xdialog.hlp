
screen(capsensitive("XDialog Library"))

The XDialog library functions can be divided in several groups:

	\#Initialisation\#
	\#Drawing dialogs\#
	\#Execution of dialogs\#
	\#Utilities\#
	\#Event functions\#
\end

screen(capsensitive("Initialisation"))
Xdialog initialisation functions
----------------------------------------------------------------------

Initialisation of the library functions and initialisation of the
resource. The functions xd_gaddr() and xd_fixtree() should be used
instead of the AES functions rsrc_gaddr() and rsrc_obfix().

    \#init_xdialog\#   - Initialize the dialog library.
    \#exit_xdialog\#   - Exit the dialog library.
    \#xd_gaddr\#       - Get the address of an object tree.
    \#xd_fixtree\#     - Translate a object tree from character
                     coordinates to pixelcoordinates.
    \#xd_setdialmode\# - Set dialog window mode.
    \#xd_setposmode\#  - Set dialog position mode.
\end

screen(capsensitive("Drawing dialogs"))
Xdialog drawing functions
----------------------------------------------------------------------

These functions should be used to (re)draw parts of dialogs. Do not
use objc_draw or objc_change.

    \#xd_draw\#    - Draw a part of a dialog box.
    \#xd_change\#  - Change the state of an object in a dialog box
                 and redraw it.
\end

screen(capsensitive("Execution of dialogs"))
Functions for execution of dailogs
----------------------------------------------------------------------

These functions should be used for executing dialogs. Do not use 
the original AES functions like form_do, form_dial etc. instead of
these functions.

    \#xd_open\#        - Open a dialog box.
    \#xd_open_wzoom\#  - Open a dialog box.
    \#xd_close\#       - Close a dialog box
    \#xd_close_wzoom\# - Close a dialog box.

    \#xd_kform_do\#    - Replacement \#form_do\#.
    \#xd_form_do\#     - Replacement \#form_do\#.
    \#xd_kdialog\#     - Execute a complete dialog, including xd_open,
                     xd_kform_do, xd_close.
    \#xd_dialog\#      - see xd_kdialog.
\end

screen(capsensitive("Utilities"))
Xdialog utility functions.
----------------------------------------------------------------------

    \#xd_rcintersect\#  - Calculate the intersection of two rectangles.
    \#xd_initmfdb\#     - Initialize an MFDB structure.
    \#xd_objrect\#      - Get the object rectangle.
    \#xd_userdef\#      - Make an object user defined.
    \#xd_rect2pxy\#     - Transform a rectangle into a pxyarray used
                      by VDI.

    \#xd_obj_parent\#   - Get the parent of an object.
    \#xd_get_rbutton\#  - Find a selected radiobutton in a parent.
    \#xd_set_rbutton\#  - Set a radiobutton in a parent.
    \#xd_get_obspec\#   - Get the ob_spec field of an object.
    \#xd_set_obspec\#   - Set the ob_spec field of an object.
    \#xd_set_tristate\# - Set the state of a tri-state button.
    \#xd_get_tristate\# - Get the state of a tri-state button.
    \#xd_is_tristate\#  - Check if an object is a tri-state button.
\end

screen(capsensitive("Event functions"))
Xdialog event functions.
----------------------------------------------------------------------

Functions for handling events. If a dialog is opened, you should not
use the AES event functions, but xd_xmulti instead. This is necessary,
because otherwise the dialog box will not be redrawn if in window
mode. Please use the xd_wdupdate call instead of the wind_update call,
because it keeps track of the numer of times it has been called.

    \#xd_keycode\#  - Calculate extended keycode from scancode and
                  keystate.
    \#xd_xmulti\#   - Replacement \#evnt_multi\#.
    \#xd_wdupdate\# - Replacement wind_update function.
\end

screen(capsensitive("init_xdialog"))
Name          Initialise XDialog library.

Definition    int init_xdialog( int *vdi_handle,
                                void *(*malloc)( unsigned long size ),
                                void (*free)( void *block ),
                                const char *prgname );

Prototype in  xdialog.h

Description   Initialise the XDialog library. The function returns
              the handle of the opened VDI-workstation in vdi_handle.
              malloc and free are pointers to functions, which the
              library should use to allocate its memory, for example
              Malloc and Mfree or the malloc() and free() of the
              standard library. The parameter prgname is a pointer to
              a string with the name of the program. It is used as
              title of dialog windows, when the library is in window
              mode. This function should be called before any other
              XDialog function is called.

Result        If the initialisation was succesfull the function 
              returns 0. If there was an error the function returns
              XDVDI (Unable to open VDI-workstation).

See also      \#exit_xdialog\#
\end

screen(capsensitive("exit_xdialog"))
Name          Exit XDialog library.

Definition    void exit_xdialog( void );

Prototype in  xdialog.h

Description   Exit the XDialog library. This function should be
              called at the end of a program. It closes all dialogs,
              that are still openen and it frees all memory allocated
              by the library.

Result        exit_xdialog() has no function result.

See also      \#init_xdialog\#
\end

screen(capsensitive("xd_gaddr"))
Name          XDialog resource get address.

Definition    int xd_gaddr( int type,int index,void *addr );

Prototype in  xdialog.h

Description   Get the address of an object tree. If succesfull the
              function will also fix the extended object types of the
              XDialog library in the tree. This function or \#xd_fixtree\#
              should be called before a tree is used by any other
              XDialog library function. If a tree is in a resource
              file this function should be used. If the tree is
              included in the program \#xd_fixtree\# should be called.
              Parameters: see \#rsrc_gaddr\#.

Result        The result is 0 if an error occured, otherwise the
              result will be unequal to zero.

See also      \#rsrc_gaddr\#, \#xd_fixtree\#
\end

screen(capsensitive("xd_fixtree"))
Name          XDialog tree fix.

Definition    void xd_fixtree( OBJECT *tree );

Prototype in  xdialog.h

Description   Convert the tree coordinates of tree tree from character
              to pixel coordinates. The function will fix the extended
              object types of the XDialog library in the tree as well.
              This function or \#xd_gaddr\# should be called before a
              tree is used by any other XDialog library function. If a
              tree is in a resource file \#xd_gaddr\# should be used.
              If the tree is included in the program this function
              should be called.

Result        xd_fixtree() has no function result.

See also      \#rsrc_obfix\#, \#xd_gaddr\#
\end

screen(capsensitive("xd_setdialmode"),capsensitive("XD_NORMAL"),
capsensitive("XD_BUFFERED"),capsensitive("XD_WINDOW"))
Name          Set dialog mode.

Definition    int xd_setdialmode( int newmode,
              void (*hndl_message)( int *message,int flag ),
              OBJECT *menu,int nmnitems,int *mnitems );

Prototype in  xdialog.h

Description   This function sets the dialog mode to newmode. The
              dialog mode determines how a dialog will appear on the
              screen. The following values are allowed:

              -1          - Do not change the mode, return the current
                            value.
              XD_NORMAL   - Normal mode. The screen below a dialog
                            box will be reserved using \#form_dial\#.
              XD_BUFFERED - Buffered mode. The screen below a dialog
                            box will be saved in memory when a dialog
                            box is opened and restored from memory if
                            a dialog is closed.
              XD_WINDOW   - Window mode. Dialog boxes will appear in
                            a window.
newmode       New dialog mode.
hndl_message  This user function is called during \#xd_form_do\#, if
              the dialog mode is XD_WINDOW and a message was received
              from the AES, which could not be handled by the XDialog
              library, for example a redraw message for a window of
              the application, which called \#xd_form_do\#.
menu          Pointer to the menu bar of the application. This is
              necessary to disable the menu bar during a dialog, when
              in window mode.
nmnitems      Number of items in the mnitems array.
mnitems       Pointer to an array with the indices of the menu titles,
              which should be disabled during a dialog. The first 
              element should be the index of the info menu item in the
              desk menu. The second element should be the index to the
              second menu TITLE, and so on. The desk menu tile should
              not be disabled.

              If the dialog mode is not XD_WINDOW, then hndl_message,
              menu, nmnitems and mnitems are allowed to be 0.

Result        The function returns the old dialog mode.

See also      \#xd_setposmode\#, \#xd_kform_do\#, \#xd_form_do\#
\end

screen(capsensitive("xd_setposmode"),capsensitive("XD_CENTERED"),
capsensitive("XD_MOUSE"),capsensitive("XD_CURRPOS"))
Name          Set dialog position mode.

Definition    int xd_setposmode( int newmode );

Prototype in  xdialog.h

Description   This function sets the dialog position mode to newmode.
              This dialog position mode determines on which position
              a dialog box will appear on the screen. The following
              values are allowed:

              -1          - Do not change the mode, return the current
                            value.
              XD_CENTERED - Dialog boxes will appear in the center of
                            the screen.
              XD_MOUSE    - The dialog box will appear on the position
                            of the mouse.
              XD_CURRPOS  - The dialog will appear on the position,
                            where it appeared last time.

Result        The function returns the old position mode.

See also      \#xd_setdialmode\#
\end

screen(capsensitive("xd_draw"))
Name          Draw an object.

Definition    void xd_draw( XDINFO *dialog,int start,int depth );

Prototype in  xdialog.h

Description   Redraw a part of a dialog box. This function should be
              used instead of \#objc_draw\#, especially if the window
              mode is used. This function should not be called before
              the dialog is opened with \#xd_open\#.
dialog        Pointer to dialog info structure of the dialog.
start         Start object.
depth         Drawing depth.

Result        xd_fixtree() has no function result.

See also      \#xd_change\#, \#objc_draw\#, \#xd_open\#
\end

screen(capsensitive("xd_change"))
Name          Change object status and redraw the object.

Definition    void xd_change( XDINFO *dialog,int object,int newstate,
                              boolean draw );

Prototype in  xdialog.h

Description   Change the object status of an object and redraw it.
              This function should be used instead of \#objc_change\#,
              especially if the window mode is used. This function
              should not be called before the dialog is opened with
              \#xd_open\#.
dialog        Pointer to dialog info structure of the dialog.
start         Object, which should be changed.
newstate      New object status.
draw          Draw flag: FALSE do not redraw the object, TRUE do draw
              the object.

Result        xd_fixtree() has no function result.

See also      \#xd_draw\#, \#objc_change\#, \#xd_open\#
\end
