# Define this if you cross-compile.  When cross-compiling some files
# (notably programs and commands like zic, zdump or tzselect) won't
# get installed.  You have to take car yourself that the libraries
# and include files and so on will get installed in the right place
# The easiest way to do this is to change "prefix", see below.
EVAL_CROSS := case `uname -s` in *MiNT*) echo no;; *) echo yes; esac
ifneq ($(CROSS_TOOL),)
 toolprefix=$(CROSS_TOOL)-
 CROSS := yes
else
CROSS := $(shell $(EVAL_CROSS))
ifeq ($(CROSS),yes)
 CROSS_TOOL=m68k-atari-mint
 toolprefix=$(CROSS_TOOL)-
else
 toolprefix=
endif
endif

# Define this to the name of your C compiler.  You need at least 
# gcc 2.7.2.  Older versions will not work.  If you use an older
# gcc than 2.95.2 you will run into severe problems.
CC=$(toolprefix)gcc
AS=$(toolprefix)gcc

# Define this to "${AR} s" if your system lacks the ranlib program.
AR=$(toolprefix)ar

# Define this to "${AR} s" if your system lacks the ranlib program.
RANLIB=$(toolprefix)ranlib

# Minimal set of CFLAGS to use.  Additional flags for other processors
# will be added by the individual Makefiles.
OPTS=-Os -fomit-frame-pointer

# Flags for building executables
LDFLAGS=-Wl,--stack,32k


.c.o:
	$(AM_V_CC)$(CC) $(CFLAGS) -c -o $@ $<

.s.o:
	$(AM_V_AS)$(AS) $(CFLAGS) -c -o $@ $<

.S.o:
	$(AM_V_CPPAS)$(AS) $(CFLAGS) -c -o $@ $<
